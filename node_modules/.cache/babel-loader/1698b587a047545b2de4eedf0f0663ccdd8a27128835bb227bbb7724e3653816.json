{"ast":null,"code":"var _jsxFileName = \"/home/vishal/Downloads/Terraform/my-react-app/src/Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './styles.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const history = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      // Username contains at least one number\n      if (!/\\d/.test(username)) {\n        setErrorMessage('Username must contain at least one number.');\n        return;\n      }\n\n      // Email ends with @gmail.com\n      if (!email.endsWith('@gmail.com')) {\n        setErrorMessage('Email must end with @gmail.com.');\n        return;\n      }\n\n      // Password complexity check\n      const passwordRegex = /^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()-_+=])[A-Za-z\\d!@#$%^&*()-_+=]{8,}$/;\n      if (!passwordRegex.test(password)) {\n        setErrorMessage('Password must be at least 8 characters long and contain at least one uppercase letter, one number, and one symbol.');\n        return;\n      }\n\n      // Make API call to sign up the user\n      const response = await fetch('https://njt7h9ukwj.execute-api.us-west-2.amazonaws.com/prod/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        history.push('/signin'); // Redirect to signin page\n      } else {\n        setErrorMessage(data.error || 'Signup failed');\n      }\n    } catch (error) {\n      console.error('Error during signup:', error);\n      setErrorMessage('Error during signup');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Signup Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signin\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"XKURRa9b+ZyKiLCdw17uD2yf+Sg=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","Link","useNavigate","jsxDEV","_jsxDEV","Signup","_s","username","setUsername","email","setEmail","password","setPassword","errorMessage","setErrorMessage","history","handleSubmit","event","preventDefault","test","endsWith","passwordRegex","response","fetch","method","headers","body","JSON","stringify","data","json","ok","push","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","e","target","required","to","_c","$RefreshReg$"],"sources":["/home/vishal/Downloads/Terraform/my-react-app/src/Signup.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './styles.css'; // Import the CSS file\n\nconst Signup = () => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const history = useNavigate();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      // Username contains at least one number\n      if (!/\\d/.test(username)) {\n        setErrorMessage('Username must contain at least one number.');\n        return;\n      }\n\n      // Email ends with @gmail.com\n      if (!email.endsWith('@gmail.com')) {\n        setErrorMessage('Email must end with @gmail.com.');\n        return;\n      }\n\n      // Password complexity check\n      const passwordRegex = /^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()-_+=])[A-Za-z\\d!@#$%^&*()-_+=]{8,}$/;\n      if (!passwordRegex.test(password)) {\n        setErrorMessage('Password must be at least 8 characters long and contain at least one uppercase letter, one number, and one symbol.');\n        return;\n      }\n\n      // Make API call to sign up the user\n      const response = await fetch('https://njt7h9ukwj.execute-api.us-west-2.amazonaws.com/prod/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, email, password }), \n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        history.push('/signin'); // Redirect to signin page\n      } else {\n        setErrorMessage(data.error || 'Signup failed');\n      }\n    } catch (error) {\n      console.error('Error during signup:', error);\n      setErrorMessage('Error during signup');\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Signup Page</h2>\n      <div className=\"box\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username:</label>\n            <input \n              type=\"text\" \n              id=\"username\" \n              value={username} \n              onChange={(e) => setUsername(e.target.value)} \n              required \n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email:</label>\n            <input \n              type=\"email\" \n              id=\"email\" \n              value={email} \n              onChange={(e) => setEmail(e.target.value)} \n              required \n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password:</label>\n            <input \n              type=\"password\" \n              id=\"password\" \n              value={password} \n              onChange={(e) => setPassword(e.target.value)} \n              required \n            />\n          </div>\n          {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n          <button type=\"submit\">Signup</button>\n        </form>\n      </div>\n      <p>Already have an account? <Link to=\"/signin\">Sign In</Link></p>\n    </div>\n  );\n};\n\nexport default Signup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}